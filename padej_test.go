package main

import (
	"bytes"
	"testing"
)

var test = []string{"маму", "папе", "жене", "щуки", "ноздрями", "веселому", "компах", "килоджоулей", "скакалкой", "мякотью", "решением", "чащей", "яблоней", "домом", "окном",
	"чае", "маме", "книге", "окне", "колесе", "яблоне", "рояле", "водолазе", "скакалке", "мамы", "папы", "собаку", "водолазу", "коксу", "колесу", "скакалку",
	"папу", "хорошо", "думают", "делают", "употребляем", "здании", "зданиям", "зданиями", "гуляли", "гуляла", "спал", "заснул", "спала", "ледокола", "хорошему",
	"смешные", "птичьих", "красивыми", "дом", "дорог", "сети", "озера", "кони", "коней", "увидели", "гор", "дороги", "озер", "горах", "собаках",
	"всеми", "им", "мной", "мне", "привлекал", "уходил"}

var testOkResult string = `мама
папа
жена
щука
ноздри
веселый
комп
килоджоуль
скакалка
мякоть
решение
чаща
яблоня
домой
окно
чай
мама
книга
окно
колесо
яблоня
рояль
водолаз
скакалка
мама
папа
собака
водолаз
кокс
колесо
скакалка
папа
хорошо
думать
делать
употреблять
здание
здание
здание
гулять
гулять
спать
заснуть
спать
ледокол
хороший
смешной
птичий
красивый
дом
дорога
сеть
озеро
конь
конь
увидеть
гора
дорога
озеро
гора
собака
все
они
я
я
привлекать
уходить
`

func TestOKNumbers(t *testing.T) {
	out := bytes.NewBuffer(nil)
	createLibrary()
	for _, value := range test {
		value = onlyLetters(value)
		in := bytes.NewBufferString(value)
		err := padejTester(value, in, out)
		if err != nil {
			t.Errorf("Test OK failed: %s", err)
		}
	}
	result := out.String()
	if result != testOkResult {
		t.Errorf("Test OK failed, result not match \n %v %v", result, testOkResult)

	}
}
